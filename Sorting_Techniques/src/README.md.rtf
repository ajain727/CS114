{\rtf1\ansi\ansicpg1252\cocoartf2757
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 # Sorting Algorithms in Java\
\
This folder contains Java implementations of various sorting algorithms.\
\
## Files\
\
### Bubble Sort\
- `BubbleSortingExercise.java`: Implements the Bubble Sort algorithm.\
  - `bubbleSort(int[] arr)`: Sorts an array using Bubble Sort.\
  - `printArray(int[] arr)`: Utility method to print the array.\
\
### Selection Sort\
- `SelectionSortExercise.java`: Implements the Selection Sort algorithm.\
  - `selectionSort(int[] arr)`: Sorts an array using Selection Sort.\
  - `swap(int[] arr, int a, int b)`: Swaps elements in the array.\
  - `printArray(int[] arr)`: Utility method to print the array.\
\
### Insertion Sort\
- `InsertionSortExercise.java`: Implements the Insertion Sort algorithm.\
  - `insertionSort(int[] arr)`: Sorts an array using Insertion Sort.\
  - `printArray(int[] arr)`: Utility method to print the array.\
\
### Quick Sort\
- `QuickSortExercise.java`: Implements the Quick Sort algorithm.\
  - `quickSort(int[] arr, int low, int high)`: Sorts an array using Quick Sort.\
  - `partition(int[] arr, int low, int high)`: Partitions the array for Quick Sort.\
  - `printArray(int[] arr)`: Utility method to print the array.\
\
## Usage\
\
- Each Java file contains a `main` method to demonstrate the sorting algorithms.\
- Compile each Java file and execute the `main` method to see the sorting algorithms in action.\
- Follow the instructions within each file's comments for more details on how the algorithms work.\
\
Feel free to explore and use these sorting algorithms for educational purposes or to understand how different sorting techniques operate in Java.\
}